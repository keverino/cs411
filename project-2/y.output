State 28 conflicts: 1 shift/reduce
State 62 conflicts: 1 shift/reduce
State 69 conflicts: 16 shift/reduce, 1 reduce/reduce
State 70 conflicts: 1 shift/reduce
State 87 conflicts: 1 shift/reduce
State 177 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: Dec

    2 Dec: Dec Decl
    3    | Decl

    4 Decl: VariableDecl
    5     | FunctionDecl
    6     | ClassDecl
    7     | InterfaceDecl

    8 VariableDecls: VariableDecl VariableDecls
    9              | /* empty */

   10 VariableDecl: Variable t_semicolon

   11 Variable: Type t_id

   12 Type: t_bool
   13     | t_int
   14     | t_double
   15     | t_string
   16     | Type t_leftbracket t_rightbracket
   17     | t_id

   18 FunctionDecl: Type t_id t_leftparen Formals t_rightparen StmtBlock
   19             | t_void t_id t_leftparen Formals t_rightparen StmtBlock

   20 Formals: Formals t_comma Variable
   21        | Variable
   22        | /* empty */

   23 ClassDecl: t_class t_id Extends Implements t_leftbrace Field t_rightbrace

   24 Extends: t_extends t_id
   25        | /* empty */

   26 Implements: t_implements IDList
   27           | /* empty */

   28 IDList: t_id t_comma IDList
   29       | t_id

   30 Field: VariableDecl
   31      | FunctionDecl
   32      | /* empty */

   33 InterfaceDecl: t_interface t_id t_leftbrace Prototypes t_rightbrace
   34              | t_interface t_id t_leftbrace t_rightbrace

   35 Prototypes: Prototype Prototypes
   36           | /* empty */

   37 Prototype: Type t_id t_leftparen Formals t_rightparen t_semicolon
   38          | t_void t_id t_leftparen Formals t_rightparen t_semicolon

   39 StmtBlock: t_leftbrace VariableDecls Stmts t_rightbrace

   40 Stmts: Stmts Stmt
   41      | Stmt
   42      | /* empty */

   43 Stmt: ExprOrEmpty t_semicolon
   44     | IfStmt
   45     | WhileStmt
   46     | ForStmt
   47     | BreakStmt
   48     | ReturnStmt
   49     | PrintStmt
   50     | StmtBlock

   51 IfStmt: t_if t_leftparen Expr t_rightparen Stmt
   52       | t_if t_leftparen Expr t_rightparen Stmt t_else Stmt

   53 WhileStmt: t_while t_leftparen Expr t_rightparen Stmt

   54 ForStmt: t_for t_leftparen ExprOrEmpty t_semicolon Expr t_semicolon ExprOrEmpty t_rightparen Stmt

   55 BreakStmt: t_break t_semicolon

   56 ReturnStmt: t_return ExprOrEmpty t_semicolon

   57 PrintStmt: t_println t_leftparen ExprList t_rightparen t_semicolon

   58 ExprList: ExprList t_comma Expr
   59         | Expr

   60 ExprOrEmpty: Expr
   61            | /* empty */

   62 Expr: Lvalue t_assignop Expr
   63     | Constant
   64     | Lvalue
   65     | Call
   66     | t_leftparen Expr t_rightparen
   67     | Expr t_plus Expr
   68     | Expr t_minus Expr
   69     | Expr t_multiplication Expr
   70     | Expr t_division Expr
   71     | Expr t_mod Expr
   72     | Expr t_or Expr
   73     | Expr t_and Expr
   74     | Expr t_not Expr
   75     | t_minus Expr
   76     | Expr t_less Expr
   77     | Expr t_lessequal Expr
   78     | Expr t_greater Expr
   79     | Expr t_greaterequal Expr
   80     | Expr t_equal Expr
   81     | Expr t_notequal Expr
   82     | t_readln t_leftparen t_rightparen
   83     | t_newarray t_leftparen t_intconstant t_comma Type t_rightparen

   84 Lvalue: t_id
   85       | Expr t_leftbracket Expr t_rightbracket
   86       | Expr t_period t_id

   87 Call: t_id t_leftparen Actuals t_rightparen
   88     | t_id t_period t_id t_leftparen Actuals t_rightparen

   89 Actuals: Expr
   90        | Expr t_comma Actuals
   91        | /* empty */

   92 Constant: t_intconstant
   93         | t_doubleconstant
   94         | t_stringconstant
   95         | t_boolconstant


Terminals, with rules where they appear

$end (0) 0
error (256)
t_bool (258) 12
t_break (259) 55
t_class (260) 23
t_double (261) 14
t_else (262) 52
t_extends (263) 24
t_for (264) 54
t_if (265) 51 52
t_implements (266) 26
t_int (267) 13
t_interface (268) 33 34
t_newarray (269) 83
t_println (270) 57
t_readln (271) 82
t_return (272) 56
t_string (273) 15
t_void (274) 19 38
t_while (275) 53
t_plus (276) 67
t_minus (277) 68 75
t_multiplication (278) 69
t_division (279) 70
t_mod (280) 71
t_less (281) 76
t_lessequal (282) 77
t_greater (283) 78
t_greaterequal (284) 79
t_equal (285) 80
t_notequal (286) 81
t_and (287) 73
t_or (288) 72
t_not (289) 74
t_assignop (290) 62
t_semicolon (291) 10 37 38 43 54 55 56 57
t_comma (292) 20 28 58 83 90
t_period (293) 86 88
t_leftparen (294) 18 19 37 38 51 52 53 54 57 66 82 83 87 88
t_rightparen (295) 18 19 37 38 51 52 53 54 57 66 82 83 87 88
t_leftbracket (296) 16 85
t_rightbracket (297) 16 85
t_leftbrace (298) 23 33 34 39
t_rightbrace (299) 23 33 34 39
t_boolconstant (300) 95
t_intconstant (301) 83 92
t_doubleconstant (302) 93
t_stringconstant (303) 94
t_id (304) 11 17 18 19 23 24 28 29 33 34 37 38 84 86 87 88
UMINUS (305)


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
Program (52)
    on left: 1, on right: 0
Dec (53)
    on left: 2 3, on right: 1 2
Decl (54)
    on left: 4 5 6 7, on right: 2 3
VariableDecls (55)
    on left: 8 9, on right: 8 39
VariableDecl (56)
    on left: 10, on right: 4 8 30
Variable (57)
    on left: 11, on right: 10 20 21
Type (58)
    on left: 12 13 14 15 16 17, on right: 11 16 18 37 83
FunctionDecl (59)
    on left: 18 19, on right: 5 31
Formals (60)
    on left: 20 21 22, on right: 18 19 20 37 38
ClassDecl (61)
    on left: 23, on right: 6
Extends (62)
    on left: 24 25, on right: 23
Implements (63)
    on left: 26 27, on right: 23
IDList (64)
    on left: 28 29, on right: 26 28
Field (65)
    on left: 30 31 32, on right: 23
InterfaceDecl (66)
    on left: 33 34, on right: 7
Prototypes (67)
    on left: 35 36, on right: 33 35
Prototype (68)
    on left: 37 38, on right: 35
StmtBlock (69)
    on left: 39, on right: 18 19 50
Stmts (70)
    on left: 40 41 42, on right: 39 40
Stmt (71)
    on left: 43 44 45 46 47 48 49 50, on right: 40 41 51 52 53 54
IfStmt (72)
    on left: 51 52, on right: 44
WhileStmt (73)
    on left: 53, on right: 45
ForStmt (74)
    on left: 54, on right: 46
BreakStmt (75)
    on left: 55, on right: 47
ReturnStmt (76)
    on left: 56, on right: 48
PrintStmt (77)
    on left: 57, on right: 49
ExprList (78)
    on left: 58 59, on right: 57 58
ExprOrEmpty (79)
    on left: 60 61, on right: 43 54 56
Expr (80)
    on left: 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79
    80 81 82 83, on right: 51 52 53 54 58 59 60 62 66 67 68 69 70 71
    72 73 74 75 76 77 78 79 80 81 85 86 89 90
Lvalue (81)
    on left: 84 85 86, on right: 62 64
Call (82)
    on left: 87 88, on right: 65
Actuals (83)
    on left: 89 90 91, on right: 87 88 90
Constant (84)
    on left: 92 93 94 95, on right: 63


state 0

    0 $accept: . Program $end

    t_bool       shift, and go to state 1
    t_class      shift, and go to state 2
    t_double     shift, and go to state 3
    t_int        shift, and go to state 4
    t_interface  shift, and go to state 5
    t_string     shift, and go to state 6
    t_void       shift, and go to state 7
    t_id         shift, and go to state 8

    Program        go to state 9
    Dec            go to state 10
    Decl           go to state 11
    VariableDecl   go to state 12
    Variable       go to state 13
    Type           go to state 14
    FunctionDecl   go to state 15
    ClassDecl      go to state 16
    InterfaceDecl  go to state 17


state 1

   12 Type: t_bool .

    $default  reduce using rule 12 (Type)


state 2

   23 ClassDecl: t_class . t_id Extends Implements t_leftbrace Field t_rightbrace

    t_id  shift, and go to state 18


state 3

   14 Type: t_double .

    $default  reduce using rule 14 (Type)


state 4

   13 Type: t_int .

    $default  reduce using rule 13 (Type)


state 5

   33 InterfaceDecl: t_interface . t_id t_leftbrace Prototypes t_rightbrace
   34              | t_interface . t_id t_leftbrace t_rightbrace

    t_id  shift, and go to state 19


state 6

   15 Type: t_string .

    $default  reduce using rule 15 (Type)


state 7

   19 FunctionDecl: t_void . t_id t_leftparen Formals t_rightparen StmtBlock

    t_id  shift, and go to state 20


state 8

   17 Type: t_id .

    $default  reduce using rule 17 (Type)


state 9

    0 $accept: Program . $end

    $end  shift, and go to state 21


state 10

    1 Program: Dec .
    2 Dec: Dec . Decl

    t_bool       shift, and go to state 1
    t_class      shift, and go to state 2
    t_double     shift, and go to state 3
    t_int        shift, and go to state 4
    t_interface  shift, and go to state 5
    t_string     shift, and go to state 6
    t_void       shift, and go to state 7
    t_id         shift, and go to state 8

    $default  reduce using rule 1 (Program)

    Decl           go to state 22
    VariableDecl   go to state 12
    Variable       go to state 13
    Type           go to state 14
    FunctionDecl   go to state 15
    ClassDecl      go to state 16
    InterfaceDecl  go to state 17


state 11

    3 Dec: Decl .

    $default  reduce using rule 3 (Dec)


state 12

    4 Decl: VariableDecl .

    $default  reduce using rule 4 (Decl)


state 13

   10 VariableDecl: Variable . t_semicolon

    t_semicolon  shift, and go to state 23


state 14

   11 Variable: Type . t_id
   16 Type: Type . t_leftbracket t_rightbracket
   18 FunctionDecl: Type . t_id t_leftparen Formals t_rightparen StmtBlock

    t_leftbracket  shift, and go to state 24
    t_id           shift, and go to state 25


state 15

    5 Decl: FunctionDecl .

    $default  reduce using rule 5 (Decl)


state 16

    6 Decl: ClassDecl .

    $default  reduce using rule 6 (Decl)


state 17

    7 Decl: InterfaceDecl .

    $default  reduce using rule 7 (Decl)


state 18

   23 ClassDecl: t_class t_id . Extends Implements t_leftbrace Field t_rightbrace

    t_extends  shift, and go to state 26

    $default  reduce using rule 25 (Extends)

    Extends  go to state 27


state 19

   33 InterfaceDecl: t_interface t_id . t_leftbrace Prototypes t_rightbrace
   34              | t_interface t_id . t_leftbrace t_rightbrace

    t_leftbrace  shift, and go to state 28


state 20

   19 FunctionDecl: t_void t_id . t_leftparen Formals t_rightparen StmtBlock

    t_leftparen  shift, and go to state 29


state 21

    0 $accept: Program $end .

    $default  accept


state 22

    2 Dec: Dec Decl .

    $default  reduce using rule 2 (Dec)


state 23

   10 VariableDecl: Variable t_semicolon .

    $default  reduce using rule 10 (VariableDecl)


state 24

   16 Type: Type t_leftbracket . t_rightbracket

    t_rightbracket  shift, and go to state 30


state 25

   11 Variable: Type t_id .
   18 FunctionDecl: Type t_id . t_leftparen Formals t_rightparen StmtBlock

    t_leftparen  shift, and go to state 31

    $default  reduce using rule 11 (Variable)


state 26

   24 Extends: t_extends . t_id

    t_id  shift, and go to state 32


state 27

   23 ClassDecl: t_class t_id Extends . Implements t_leftbrace Field t_rightbrace

    t_implements  shift, and go to state 33

    $default  reduce using rule 27 (Implements)

    Implements  go to state 34


state 28

   33 InterfaceDecl: t_interface t_id t_leftbrace . Prototypes t_rightbrace
   34              | t_interface t_id t_leftbrace . t_rightbrace

    t_bool        shift, and go to state 1
    t_double      shift, and go to state 3
    t_int         shift, and go to state 4
    t_string      shift, and go to state 6
    t_void        shift, and go to state 35
    t_rightbrace  shift, and go to state 36
    t_id          shift, and go to state 8

    t_rightbrace  [reduce using rule 36 (Prototypes)]

    Type        go to state 37
    Prototypes  go to state 38
    Prototype   go to state 39


state 29

   19 FunctionDecl: t_void t_id t_leftparen . Formals t_rightparen StmtBlock

    t_bool    shift, and go to state 1
    t_double  shift, and go to state 3
    t_int     shift, and go to state 4
    t_string  shift, and go to state 6
    t_id      shift, and go to state 8

    $default  reduce using rule 22 (Formals)

    Variable  go to state 40
    Type      go to state 41
    Formals   go to state 42


state 30

   16 Type: Type t_leftbracket t_rightbracket .

    $default  reduce using rule 16 (Type)


state 31

   18 FunctionDecl: Type t_id t_leftparen . Formals t_rightparen StmtBlock

    t_bool    shift, and go to state 1
    t_double  shift, and go to state 3
    t_int     shift, and go to state 4
    t_string  shift, and go to state 6
    t_id      shift, and go to state 8

    $default  reduce using rule 22 (Formals)

    Variable  go to state 40
    Type      go to state 41
    Formals   go to state 43


state 32

   24 Extends: t_extends t_id .

    $default  reduce using rule 24 (Extends)


state 33

   26 Implements: t_implements . IDList

    t_id  shift, and go to state 44

    IDList  go to state 45


state 34

   23 ClassDecl: t_class t_id Extends Implements . t_leftbrace Field t_rightbrace

    t_leftbrace  shift, and go to state 46


state 35

   38 Prototype: t_void . t_id t_leftparen Formals t_rightparen t_semicolon

    t_id  shift, and go to state 47


state 36

   34 InterfaceDecl: t_interface t_id t_leftbrace t_rightbrace .

    $default  reduce using rule 34 (InterfaceDecl)


state 37

   16 Type: Type . t_leftbracket t_rightbracket
   37 Prototype: Type . t_id t_leftparen Formals t_rightparen t_semicolon

    t_leftbracket  shift, and go to state 24
    t_id           shift, and go to state 48


state 38

   33 InterfaceDecl: t_interface t_id t_leftbrace Prototypes . t_rightbrace

    t_rightbrace  shift, and go to state 49


state 39

   35 Prototypes: Prototype . Prototypes

    t_bool    shift, and go to state 1
    t_double  shift, and go to state 3
    t_int     shift, and go to state 4
    t_string  shift, and go to state 6
    t_void    shift, and go to state 35
    t_id      shift, and go to state 8

    $default  reduce using rule 36 (Prototypes)

    Type        go to state 37
    Prototypes  go to state 50
    Prototype   go to state 39


state 40

   21 Formals: Variable .

    $default  reduce using rule 21 (Formals)


state 41

   11 Variable: Type . t_id
   16 Type: Type . t_leftbracket t_rightbracket

    t_leftbracket  shift, and go to state 24
    t_id           shift, and go to state 51


state 42

   19 FunctionDecl: t_void t_id t_leftparen Formals . t_rightparen StmtBlock
   20 Formals: Formals . t_comma Variable

    t_comma       shift, and go to state 52
    t_rightparen  shift, and go to state 53


state 43

   18 FunctionDecl: Type t_id t_leftparen Formals . t_rightparen StmtBlock
   20 Formals: Formals . t_comma Variable

    t_comma       shift, and go to state 52
    t_rightparen  shift, and go to state 54


state 44

   28 IDList: t_id . t_comma IDList
   29       | t_id .

    t_comma  shift, and go to state 55

    $default  reduce using rule 29 (IDList)


state 45

   26 Implements: t_implements IDList .

    $default  reduce using rule 26 (Implements)


state 46

   23 ClassDecl: t_class t_id Extends Implements t_leftbrace . Field t_rightbrace

    t_bool    shift, and go to state 1
    t_double  shift, and go to state 3
    t_int     shift, and go to state 4
    t_string  shift, and go to state 6
    t_void    shift, and go to state 7
    t_id      shift, and go to state 8

    $default  reduce using rule 32 (Field)

    VariableDecl  go to state 56
    Variable      go to state 13
    Type          go to state 14
    FunctionDecl  go to state 57
    Field         go to state 58


state 47

   38 Prototype: t_void t_id . t_leftparen Formals t_rightparen t_semicolon

    t_leftparen  shift, and go to state 59


state 48

   37 Prototype: Type t_id . t_leftparen Formals t_rightparen t_semicolon

    t_leftparen  shift, and go to state 60


state 49

   33 InterfaceDecl: t_interface t_id t_leftbrace Prototypes t_rightbrace .

    $default  reduce using rule 33 (InterfaceDecl)


state 50

   35 Prototypes: Prototype Prototypes .

    $default  reduce using rule 35 (Prototypes)


state 51

   11 Variable: Type t_id .

    $default  reduce using rule 11 (Variable)


state 52

   20 Formals: Formals t_comma . Variable

    t_bool    shift, and go to state 1
    t_double  shift, and go to state 3
    t_int     shift, and go to state 4
    t_string  shift, and go to state 6
    t_id      shift, and go to state 8

    Variable  go to state 61
    Type      go to state 41


state 53

   19 FunctionDecl: t_void t_id t_leftparen Formals t_rightparen . StmtBlock

    t_leftbrace  shift, and go to state 62

    StmtBlock  go to state 63


state 54

   18 FunctionDecl: Type t_id t_leftparen Formals t_rightparen . StmtBlock

    t_leftbrace  shift, and go to state 62

    StmtBlock  go to state 64


state 55

   28 IDList: t_id t_comma . IDList

    t_id  shift, and go to state 44

    IDList  go to state 65


state 56

   30 Field: VariableDecl .

    $default  reduce using rule 30 (Field)


state 57

   31 Field: FunctionDecl .

    $default  reduce using rule 31 (Field)


state 58

   23 ClassDecl: t_class t_id Extends Implements t_leftbrace Field . t_rightbrace

    t_rightbrace  shift, and go to state 66


state 59

   38 Prototype: t_void t_id t_leftparen . Formals t_rightparen t_semicolon

    t_bool    shift, and go to state 1
    t_double  shift, and go to state 3
    t_int     shift, and go to state 4
    t_string  shift, and go to state 6
    t_id      shift, and go to state 8

    $default  reduce using rule 22 (Formals)

    Variable  go to state 40
    Type      go to state 41
    Formals   go to state 67


state 60

   37 Prototype: Type t_id t_leftparen . Formals t_rightparen t_semicolon

    t_bool    shift, and go to state 1
    t_double  shift, and go to state 3
    t_int     shift, and go to state 4
    t_string  shift, and go to state 6
    t_id      shift, and go to state 8

    $default  reduce using rule 22 (Formals)

    Variable  go to state 40
    Type      go to state 41
    Formals   go to state 68


state 61

   20 Formals: Formals t_comma Variable .

    $default  reduce using rule 20 (Formals)


state 62

   39 StmtBlock: t_leftbrace . VariableDecls Stmts t_rightbrace

    t_bool    shift, and go to state 1
    t_double  shift, and go to state 3
    t_int     shift, and go to state 4
    t_string  shift, and go to state 6
    t_id      shift, and go to state 8

    t_id      [reduce using rule 9 (VariableDecls)]
    $default  reduce using rule 9 (VariableDecls)

    VariableDecls  go to state 69
    VariableDecl   go to state 70
    Variable       go to state 13
    Type           go to state 41


state 63

   19 FunctionDecl: t_void t_id t_leftparen Formals t_rightparen StmtBlock .

    $default  reduce using rule 19 (FunctionDecl)


state 64

   18 FunctionDecl: Type t_id t_leftparen Formals t_rightparen StmtBlock .

    $default  reduce using rule 18 (FunctionDecl)


state 65

   28 IDList: t_id t_comma IDList .

    $default  reduce using rule 28 (IDList)


state 66

   23 ClassDecl: t_class t_id Extends Implements t_leftbrace Field t_rightbrace .

    $default  reduce using rule 23 (ClassDecl)


state 67

   20 Formals: Formals . t_comma Variable
   38 Prototype: t_void t_id t_leftparen Formals . t_rightparen t_semicolon

    t_comma       shift, and go to state 52
    t_rightparen  shift, and go to state 71


state 68

   20 Formals: Formals . t_comma Variable
   37 Prototype: Type t_id t_leftparen Formals . t_rightparen t_semicolon

    t_comma       shift, and go to state 52
    t_rightparen  shift, and go to state 72


state 69

   39 StmtBlock: t_leftbrace VariableDecls . Stmts t_rightbrace

    t_break           shift, and go to state 73
    t_for             shift, and go to state 74
    t_if              shift, and go to state 75
    t_newarray        shift, and go to state 76
    t_println         shift, and go to state 77
    t_readln          shift, and go to state 78
    t_return          shift, and go to state 79
    t_while           shift, and go to state 80
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_leftbrace       shift, and go to state 62
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    t_break           [reduce using rule 42 (Stmts)]
    t_for             [reduce using rule 42 (Stmts)]
    t_if              [reduce using rule 42 (Stmts)]
    t_newarray        [reduce using rule 42 (Stmts)]
    t_println         [reduce using rule 42 (Stmts)]
    t_readln          [reduce using rule 42 (Stmts)]
    t_return          [reduce using rule 42 (Stmts)]
    t_while           [reduce using rule 42 (Stmts)]
    t_minus           [reduce using rule 42 (Stmts)]
    t_semicolon       reduce using rule 42 (Stmts)
    t_semicolon       [reduce using rule 61 (ExprOrEmpty)]
    t_leftparen       [reduce using rule 42 (Stmts)]
    t_leftbrace       [reduce using rule 42 (Stmts)]
    t_boolconstant    [reduce using rule 42 (Stmts)]
    t_intconstant     [reduce using rule 42 (Stmts)]
    t_doubleconstant  [reduce using rule 42 (Stmts)]
    t_stringconstant  [reduce using rule 42 (Stmts)]
    t_id              [reduce using rule 42 (Stmts)]
    $default          reduce using rule 42 (Stmts)

    StmtBlock    go to state 88
    Stmts        go to state 89
    Stmt         go to state 90
    IfStmt       go to state 91
    WhileStmt    go to state 92
    ForStmt      go to state 93
    BreakStmt    go to state 94
    ReturnStmt   go to state 95
    PrintStmt    go to state 96
    ExprOrEmpty  go to state 97
    Expr         go to state 98
    Lvalue       go to state 99
    Call         go to state 100
    Constant     go to state 101


state 70

    8 VariableDecls: VariableDecl . VariableDecls

    t_bool    shift, and go to state 1
    t_double  shift, and go to state 3
    t_int     shift, and go to state 4
    t_string  shift, and go to state 6
    t_id      shift, and go to state 8

    t_id      [reduce using rule 9 (VariableDecls)]
    $default  reduce using rule 9 (VariableDecls)

    VariableDecls  go to state 102
    VariableDecl   go to state 70
    Variable       go to state 13
    Type           go to state 41


state 71

   38 Prototype: t_void t_id t_leftparen Formals t_rightparen . t_semicolon

    t_semicolon  shift, and go to state 103


state 72

   37 Prototype: Type t_id t_leftparen Formals t_rightparen . t_semicolon

    t_semicolon  shift, and go to state 104


state 73

   55 BreakStmt: t_break . t_semicolon

    t_semicolon  shift, and go to state 105


state 74

   54 ForStmt: t_for . t_leftparen ExprOrEmpty t_semicolon Expr t_semicolon ExprOrEmpty t_rightparen Stmt

    t_leftparen  shift, and go to state 106


state 75

   51 IfStmt: t_if . t_leftparen Expr t_rightparen Stmt
   52       | t_if . t_leftparen Expr t_rightparen Stmt t_else Stmt

    t_leftparen  shift, and go to state 107


state 76

   83 Expr: t_newarray . t_leftparen t_intconstant t_comma Type t_rightparen

    t_leftparen  shift, and go to state 108


state 77

   57 PrintStmt: t_println . t_leftparen ExprList t_rightparen t_semicolon

    t_leftparen  shift, and go to state 109


state 78

   82 Expr: t_readln . t_leftparen t_rightparen

    t_leftparen  shift, and go to state 110


state 79

   56 ReturnStmt: t_return . ExprOrEmpty t_semicolon

    t_newarray        shift, and go to state 76
    t_readln          shift, and go to state 78
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    $default  reduce using rule 61 (ExprOrEmpty)

    ExprOrEmpty  go to state 111
    Expr         go to state 98
    Lvalue       go to state 99
    Call         go to state 100
    Constant     go to state 101


state 80

   53 WhileStmt: t_while . t_leftparen Expr t_rightparen Stmt

    t_leftparen  shift, and go to state 112


state 81

   75 Expr: t_minus . Expr

    t_newarray        shift, and go to state 76
    t_readln          shift, and go to state 78
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    Expr      go to state 113
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


state 82

   66 Expr: t_leftparen . Expr t_rightparen

    t_newarray        shift, and go to state 76
    t_readln          shift, and go to state 78
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    Expr      go to state 114
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


state 83

   95 Constant: t_boolconstant .

    $default  reduce using rule 95 (Constant)


state 84

   92 Constant: t_intconstant .

    $default  reduce using rule 92 (Constant)


state 85

   93 Constant: t_doubleconstant .

    $default  reduce using rule 93 (Constant)


state 86

   94 Constant: t_stringconstant .

    $default  reduce using rule 94 (Constant)


state 87

   84 Lvalue: t_id .
   87 Call: t_id . t_leftparen Actuals t_rightparen
   88     | t_id . t_period t_id t_leftparen Actuals t_rightparen

    t_period     shift, and go to state 115
    t_leftparen  shift, and go to state 116

    t_period  [reduce using rule 84 (Lvalue)]
    $default  reduce using rule 84 (Lvalue)


state 88

   50 Stmt: StmtBlock .

    $default  reduce using rule 50 (Stmt)


state 89

   39 StmtBlock: t_leftbrace VariableDecls Stmts . t_rightbrace
   40 Stmts: Stmts . Stmt

    t_break           shift, and go to state 73
    t_for             shift, and go to state 74
    t_if              shift, and go to state 75
    t_newarray        shift, and go to state 76
    t_println         shift, and go to state 77
    t_readln          shift, and go to state 78
    t_return          shift, and go to state 79
    t_while           shift, and go to state 80
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_leftbrace       shift, and go to state 62
    t_rightbrace      shift, and go to state 117
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    $default  reduce using rule 61 (ExprOrEmpty)

    StmtBlock    go to state 88
    Stmt         go to state 118
    IfStmt       go to state 91
    WhileStmt    go to state 92
    ForStmt      go to state 93
    BreakStmt    go to state 94
    ReturnStmt   go to state 95
    PrintStmt    go to state 96
    ExprOrEmpty  go to state 97
    Expr         go to state 98
    Lvalue       go to state 99
    Call         go to state 100
    Constant     go to state 101


state 90

   41 Stmts: Stmt .

    $default  reduce using rule 41 (Stmts)


state 91

   44 Stmt: IfStmt .

    $default  reduce using rule 44 (Stmt)


state 92

   45 Stmt: WhileStmt .

    $default  reduce using rule 45 (Stmt)


state 93

   46 Stmt: ForStmt .

    $default  reduce using rule 46 (Stmt)


state 94

   47 Stmt: BreakStmt .

    $default  reduce using rule 47 (Stmt)


state 95

   48 Stmt: ReturnStmt .

    $default  reduce using rule 48 (Stmt)


state 96

   49 Stmt: PrintStmt .

    $default  reduce using rule 49 (Stmt)


state 97

   43 Stmt: ExprOrEmpty . t_semicolon

    t_semicolon  shift, and go to state 119


state 98

   60 ExprOrEmpty: Expr .
   67 Expr: Expr . t_plus Expr
   68     | Expr . t_minus Expr
   69     | Expr . t_multiplication Expr
   70     | Expr . t_division Expr
   71     | Expr . t_mod Expr
   72     | Expr . t_or Expr
   73     | Expr . t_and Expr
   74     | Expr . t_not Expr
   76     | Expr . t_less Expr
   77     | Expr . t_lessequal Expr
   78     | Expr . t_greater Expr
   79     | Expr . t_greaterequal Expr
   80     | Expr . t_equal Expr
   81     | Expr . t_notequal Expr
   85 Lvalue: Expr . t_leftbracket Expr t_rightbracket
   86       | Expr . t_period t_id

    t_plus            shift, and go to state 120
    t_minus           shift, and go to state 121
    t_multiplication  shift, and go to state 122
    t_division        shift, and go to state 123
    t_mod             shift, and go to state 124
    t_less            shift, and go to state 125
    t_lessequal       shift, and go to state 126
    t_greater         shift, and go to state 127
    t_greaterequal    shift, and go to state 128
    t_equal           shift, and go to state 129
    t_notequal        shift, and go to state 130
    t_and             shift, and go to state 131
    t_or              shift, and go to state 132
    t_not             shift, and go to state 133
    t_period          shift, and go to state 134
    t_leftbracket     shift, and go to state 135

    $default  reduce using rule 60 (ExprOrEmpty)


state 99

   62 Expr: Lvalue . t_assignop Expr
   64     | Lvalue .

    t_assignop  shift, and go to state 136

    $default  reduce using rule 64 (Expr)


state 100

   65 Expr: Call .

    $default  reduce using rule 65 (Expr)


state 101

   63 Expr: Constant .

    $default  reduce using rule 63 (Expr)


state 102

    8 VariableDecls: VariableDecl VariableDecls .

    $default  reduce using rule 8 (VariableDecls)


state 103

   38 Prototype: t_void t_id t_leftparen Formals t_rightparen t_semicolon .

    $default  reduce using rule 38 (Prototype)


state 104

   37 Prototype: Type t_id t_leftparen Formals t_rightparen t_semicolon .

    $default  reduce using rule 37 (Prototype)


state 105

   55 BreakStmt: t_break t_semicolon .

    $default  reduce using rule 55 (BreakStmt)


state 106

   54 ForStmt: t_for t_leftparen . ExprOrEmpty t_semicolon Expr t_semicolon ExprOrEmpty t_rightparen Stmt

    t_newarray        shift, and go to state 76
    t_readln          shift, and go to state 78
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    $default  reduce using rule 61 (ExprOrEmpty)

    ExprOrEmpty  go to state 137
    Expr         go to state 98
    Lvalue       go to state 99
    Call         go to state 100
    Constant     go to state 101


state 107

   51 IfStmt: t_if t_leftparen . Expr t_rightparen Stmt
   52       | t_if t_leftparen . Expr t_rightparen Stmt t_else Stmt

    t_newarray        shift, and go to state 76
    t_readln          shift, and go to state 78
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    Expr      go to state 138
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


state 108

   83 Expr: t_newarray t_leftparen . t_intconstant t_comma Type t_rightparen

    t_intconstant  shift, and go to state 139


state 109

   57 PrintStmt: t_println t_leftparen . ExprList t_rightparen t_semicolon

    t_newarray        shift, and go to state 76
    t_readln          shift, and go to state 78
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    ExprList  go to state 140
    Expr      go to state 141
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


state 110

   82 Expr: t_readln t_leftparen . t_rightparen

    t_rightparen  shift, and go to state 142


state 111

   56 ReturnStmt: t_return ExprOrEmpty . t_semicolon

    t_semicolon  shift, and go to state 143


state 112

   53 WhileStmt: t_while t_leftparen . Expr t_rightparen Stmt

    t_newarray        shift, and go to state 76
    t_readln          shift, and go to state 78
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    Expr      go to state 144
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


state 113

   67 Expr: Expr . t_plus Expr
   68     | Expr . t_minus Expr
   69     | Expr . t_multiplication Expr
   70     | Expr . t_division Expr
   71     | Expr . t_mod Expr
   72     | Expr . t_or Expr
   73     | Expr . t_and Expr
   74     | Expr . t_not Expr
   75     | t_minus Expr .
   76     | Expr . t_less Expr
   77     | Expr . t_lessequal Expr
   78     | Expr . t_greater Expr
   79     | Expr . t_greaterequal Expr
   80     | Expr . t_equal Expr
   81     | Expr . t_notequal Expr
   85 Lvalue: Expr . t_leftbracket Expr t_rightbracket
   86       | Expr . t_period t_id

    t_period       shift, and go to state 134
    t_leftbracket  shift, and go to state 135

    $default  reduce using rule 75 (Expr)


state 114

   66 Expr: t_leftparen Expr . t_rightparen
   67     | Expr . t_plus Expr
   68     | Expr . t_minus Expr
   69     | Expr . t_multiplication Expr
   70     | Expr . t_division Expr
   71     | Expr . t_mod Expr
   72     | Expr . t_or Expr
   73     | Expr . t_and Expr
   74     | Expr . t_not Expr
   76     | Expr . t_less Expr
   77     | Expr . t_lessequal Expr
   78     | Expr . t_greater Expr
   79     | Expr . t_greaterequal Expr
   80     | Expr . t_equal Expr
   81     | Expr . t_notequal Expr
   85 Lvalue: Expr . t_leftbracket Expr t_rightbracket
   86       | Expr . t_period t_id

    t_plus            shift, and go to state 120
    t_minus           shift, and go to state 121
    t_multiplication  shift, and go to state 122
    t_division        shift, and go to state 123
    t_mod             shift, and go to state 124
    t_less            shift, and go to state 125
    t_lessequal       shift, and go to state 126
    t_greater         shift, and go to state 127
    t_greaterequal    shift, and go to state 128
    t_equal           shift, and go to state 129
    t_notequal        shift, and go to state 130
    t_and             shift, and go to state 131
    t_or              shift, and go to state 132
    t_not             shift, and go to state 133
    t_period          shift, and go to state 134
    t_rightparen      shift, and go to state 145
    t_leftbracket     shift, and go to state 135


state 115

   88 Call: t_id t_period . t_id t_leftparen Actuals t_rightparen

    t_id  shift, and go to state 146


state 116

   87 Call: t_id t_leftparen . Actuals t_rightparen

    t_newarray        shift, and go to state 76
    t_readln          shift, and go to state 78
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    $default  reduce using rule 91 (Actuals)

    Expr      go to state 147
    Lvalue    go to state 99
    Call      go to state 100
    Actuals   go to state 148
    Constant  go to state 101


state 117

   39 StmtBlock: t_leftbrace VariableDecls Stmts t_rightbrace .

    $default  reduce using rule 39 (StmtBlock)


state 118

   40 Stmts: Stmts Stmt .

    $default  reduce using rule 40 (Stmts)


state 119

   43 Stmt: ExprOrEmpty t_semicolon .

    $default  reduce using rule 43 (Stmt)


state 120

   67 Expr: Expr t_plus . Expr

    t_newarray        shift, and go to state 76
    t_readln          shift, and go to state 78
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    Expr      go to state 149
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


state 121

   68 Expr: Expr t_minus . Expr

    t_newarray        shift, and go to state 76
    t_readln          shift, and go to state 78
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    Expr      go to state 150
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


state 122

   69 Expr: Expr t_multiplication . Expr

    t_newarray        shift, and go to state 76
    t_readln          shift, and go to state 78
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    Expr      go to state 151
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


state 123

   70 Expr: Expr t_division . Expr

    t_newarray        shift, and go to state 76
    t_readln          shift, and go to state 78
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    Expr      go to state 152
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


state 124

   71 Expr: Expr t_mod . Expr

    t_newarray        shift, and go to state 76
    t_readln          shift, and go to state 78
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    Expr      go to state 153
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


state 125

   76 Expr: Expr t_less . Expr

    t_newarray        shift, and go to state 76
    t_readln          shift, and go to state 78
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    Expr      go to state 154
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


state 126

   77 Expr: Expr t_lessequal . Expr

    t_newarray        shift, and go to state 76
    t_readln          shift, and go to state 78
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    Expr      go to state 155
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


state 127

   78 Expr: Expr t_greater . Expr

    t_newarray        shift, and go to state 76
    t_readln          shift, and go to state 78
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    Expr      go to state 156
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


state 128

   79 Expr: Expr t_greaterequal . Expr

    t_newarray        shift, and go to state 76
    t_readln          shift, and go to state 78
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    Expr      go to state 157
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


state 129

   80 Expr: Expr t_equal . Expr

    t_newarray        shift, and go to state 76
    t_readln          shift, and go to state 78
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    Expr      go to state 158
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


state 130

   81 Expr: Expr t_notequal . Expr

    t_newarray        shift, and go to state 76
    t_readln          shift, and go to state 78
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    Expr      go to state 159
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


state 131

   73 Expr: Expr t_and . Expr

    t_newarray        shift, and go to state 76
    t_readln          shift, and go to state 78
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    Expr      go to state 160
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


state 132

   72 Expr: Expr t_or . Expr

    t_newarray        shift, and go to state 76
    t_readln          shift, and go to state 78
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    Expr      go to state 161
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


state 133

   74 Expr: Expr t_not . Expr

    t_newarray        shift, and go to state 76
    t_readln          shift, and go to state 78
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    Expr      go to state 162
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


state 134

   86 Lvalue: Expr t_period . t_id

    t_id  shift, and go to state 163


state 135

   85 Lvalue: Expr t_leftbracket . Expr t_rightbracket

    t_newarray        shift, and go to state 76
    t_readln          shift, and go to state 78
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    Expr      go to state 164
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


state 136

   62 Expr: Lvalue t_assignop . Expr

    t_newarray        shift, and go to state 76
    t_readln          shift, and go to state 78
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    Expr      go to state 165
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


state 137

   54 ForStmt: t_for t_leftparen ExprOrEmpty . t_semicolon Expr t_semicolon ExprOrEmpty t_rightparen Stmt

    t_semicolon  shift, and go to state 166


state 138

   51 IfStmt: t_if t_leftparen Expr . t_rightparen Stmt
   52       | t_if t_leftparen Expr . t_rightparen Stmt t_else Stmt
   67 Expr: Expr . t_plus Expr
   68     | Expr . t_minus Expr
   69     | Expr . t_multiplication Expr
   70     | Expr . t_division Expr
   71     | Expr . t_mod Expr
   72     | Expr . t_or Expr
   73     | Expr . t_and Expr
   74     | Expr . t_not Expr
   76     | Expr . t_less Expr
   77     | Expr . t_lessequal Expr
   78     | Expr . t_greater Expr
   79     | Expr . t_greaterequal Expr
   80     | Expr . t_equal Expr
   81     | Expr . t_notequal Expr
   85 Lvalue: Expr . t_leftbracket Expr t_rightbracket
   86       | Expr . t_period t_id

    t_plus            shift, and go to state 120
    t_minus           shift, and go to state 121
    t_multiplication  shift, and go to state 122
    t_division        shift, and go to state 123
    t_mod             shift, and go to state 124
    t_less            shift, and go to state 125
    t_lessequal       shift, and go to state 126
    t_greater         shift, and go to state 127
    t_greaterequal    shift, and go to state 128
    t_equal           shift, and go to state 129
    t_notequal        shift, and go to state 130
    t_and             shift, and go to state 131
    t_or              shift, and go to state 132
    t_not             shift, and go to state 133
    t_period          shift, and go to state 134
    t_rightparen      shift, and go to state 167
    t_leftbracket     shift, and go to state 135


state 139

   83 Expr: t_newarray t_leftparen t_intconstant . t_comma Type t_rightparen

    t_comma  shift, and go to state 168


state 140

   57 PrintStmt: t_println t_leftparen ExprList . t_rightparen t_semicolon
   58 ExprList: ExprList . t_comma Expr

    t_comma       shift, and go to state 169
    t_rightparen  shift, and go to state 170


state 141

   59 ExprList: Expr .
   67 Expr: Expr . t_plus Expr
   68     | Expr . t_minus Expr
   69     | Expr . t_multiplication Expr
   70     | Expr . t_division Expr
   71     | Expr . t_mod Expr
   72     | Expr . t_or Expr
   73     | Expr . t_and Expr
   74     | Expr . t_not Expr
   76     | Expr . t_less Expr
   77     | Expr . t_lessequal Expr
   78     | Expr . t_greater Expr
   79     | Expr . t_greaterequal Expr
   80     | Expr . t_equal Expr
   81     | Expr . t_notequal Expr
   85 Lvalue: Expr . t_leftbracket Expr t_rightbracket
   86       | Expr . t_period t_id

    t_plus            shift, and go to state 120
    t_minus           shift, and go to state 121
    t_multiplication  shift, and go to state 122
    t_division        shift, and go to state 123
    t_mod             shift, and go to state 124
    t_less            shift, and go to state 125
    t_lessequal       shift, and go to state 126
    t_greater         shift, and go to state 127
    t_greaterequal    shift, and go to state 128
    t_equal           shift, and go to state 129
    t_notequal        shift, and go to state 130
    t_and             shift, and go to state 131
    t_or              shift, and go to state 132
    t_not             shift, and go to state 133
    t_period          shift, and go to state 134
    t_leftbracket     shift, and go to state 135

    $default  reduce using rule 59 (ExprList)


state 142

   82 Expr: t_readln t_leftparen t_rightparen .

    $default  reduce using rule 82 (Expr)


state 143

   56 ReturnStmt: t_return ExprOrEmpty t_semicolon .

    $default  reduce using rule 56 (ReturnStmt)


state 144

   53 WhileStmt: t_while t_leftparen Expr . t_rightparen Stmt
   67 Expr: Expr . t_plus Expr
   68     | Expr . t_minus Expr
   69     | Expr . t_multiplication Expr
   70     | Expr . t_division Expr
   71     | Expr . t_mod Expr
   72     | Expr . t_or Expr
   73     | Expr . t_and Expr
   74     | Expr . t_not Expr
   76     | Expr . t_less Expr
   77     | Expr . t_lessequal Expr
   78     | Expr . t_greater Expr
   79     | Expr . t_greaterequal Expr
   80     | Expr . t_equal Expr
   81     | Expr . t_notequal Expr
   85 Lvalue: Expr . t_leftbracket Expr t_rightbracket
   86       | Expr . t_period t_id

    t_plus            shift, and go to state 120
    t_minus           shift, and go to state 121
    t_multiplication  shift, and go to state 122
    t_division        shift, and go to state 123
    t_mod             shift, and go to state 124
    t_less            shift, and go to state 125
    t_lessequal       shift, and go to state 126
    t_greater         shift, and go to state 127
    t_greaterequal    shift, and go to state 128
    t_equal           shift, and go to state 129
    t_notequal        shift, and go to state 130
    t_and             shift, and go to state 131
    t_or              shift, and go to state 132
    t_not             shift, and go to state 133
    t_period          shift, and go to state 134
    t_rightparen      shift, and go to state 171
    t_leftbracket     shift, and go to state 135


state 145

   66 Expr: t_leftparen Expr t_rightparen .

    $default  reduce using rule 66 (Expr)


state 146

   88 Call: t_id t_period t_id . t_leftparen Actuals t_rightparen

    t_leftparen  shift, and go to state 172


state 147

   67 Expr: Expr . t_plus Expr
   68     | Expr . t_minus Expr
   69     | Expr . t_multiplication Expr
   70     | Expr . t_division Expr
   71     | Expr . t_mod Expr
   72     | Expr . t_or Expr
   73     | Expr . t_and Expr
   74     | Expr . t_not Expr
   76     | Expr . t_less Expr
   77     | Expr . t_lessequal Expr
   78     | Expr . t_greater Expr
   79     | Expr . t_greaterequal Expr
   80     | Expr . t_equal Expr
   81     | Expr . t_notequal Expr
   85 Lvalue: Expr . t_leftbracket Expr t_rightbracket
   86       | Expr . t_period t_id
   89 Actuals: Expr .
   90        | Expr . t_comma Actuals

    t_plus            shift, and go to state 120
    t_minus           shift, and go to state 121
    t_multiplication  shift, and go to state 122
    t_division        shift, and go to state 123
    t_mod             shift, and go to state 124
    t_less            shift, and go to state 125
    t_lessequal       shift, and go to state 126
    t_greater         shift, and go to state 127
    t_greaterequal    shift, and go to state 128
    t_equal           shift, and go to state 129
    t_notequal        shift, and go to state 130
    t_and             shift, and go to state 131
    t_or              shift, and go to state 132
    t_not             shift, and go to state 133
    t_comma           shift, and go to state 173
    t_period          shift, and go to state 134
    t_leftbracket     shift, and go to state 135

    $default  reduce using rule 89 (Actuals)


state 148

   87 Call: t_id t_leftparen Actuals . t_rightparen

    t_rightparen  shift, and go to state 174


state 149

   67 Expr: Expr . t_plus Expr
   67     | Expr t_plus Expr .
   68     | Expr . t_minus Expr
   69     | Expr . t_multiplication Expr
   70     | Expr . t_division Expr
   71     | Expr . t_mod Expr
   72     | Expr . t_or Expr
   73     | Expr . t_and Expr
   74     | Expr . t_not Expr
   76     | Expr . t_less Expr
   77     | Expr . t_lessequal Expr
   78     | Expr . t_greater Expr
   79     | Expr . t_greaterequal Expr
   80     | Expr . t_equal Expr
   81     | Expr . t_notequal Expr
   85 Lvalue: Expr . t_leftbracket Expr t_rightbracket
   86       | Expr . t_period t_id

    t_multiplication  shift, and go to state 122
    t_division        shift, and go to state 123
    t_mod             shift, and go to state 124
    t_not             shift, and go to state 133
    t_period          shift, and go to state 134
    t_leftbracket     shift, and go to state 135

    $default  reduce using rule 67 (Expr)


state 150

   67 Expr: Expr . t_plus Expr
   68     | Expr . t_minus Expr
   68     | Expr t_minus Expr .
   69     | Expr . t_multiplication Expr
   70     | Expr . t_division Expr
   71     | Expr . t_mod Expr
   72     | Expr . t_or Expr
   73     | Expr . t_and Expr
   74     | Expr . t_not Expr
   76     | Expr . t_less Expr
   77     | Expr . t_lessequal Expr
   78     | Expr . t_greater Expr
   79     | Expr . t_greaterequal Expr
   80     | Expr . t_equal Expr
   81     | Expr . t_notequal Expr
   85 Lvalue: Expr . t_leftbracket Expr t_rightbracket
   86       | Expr . t_period t_id

    t_multiplication  shift, and go to state 122
    t_division        shift, and go to state 123
    t_mod             shift, and go to state 124
    t_not             shift, and go to state 133
    t_period          shift, and go to state 134
    t_leftbracket     shift, and go to state 135

    $default  reduce using rule 68 (Expr)


state 151

   67 Expr: Expr . t_plus Expr
   68     | Expr . t_minus Expr
   69     | Expr . t_multiplication Expr
   69     | Expr t_multiplication Expr .
   70     | Expr . t_division Expr
   71     | Expr . t_mod Expr
   72     | Expr . t_or Expr
   73     | Expr . t_and Expr
   74     | Expr . t_not Expr
   76     | Expr . t_less Expr
   77     | Expr . t_lessequal Expr
   78     | Expr . t_greater Expr
   79     | Expr . t_greaterequal Expr
   80     | Expr . t_equal Expr
   81     | Expr . t_notequal Expr
   85 Lvalue: Expr . t_leftbracket Expr t_rightbracket
   86       | Expr . t_period t_id

    t_not          shift, and go to state 133
    t_period       shift, and go to state 134
    t_leftbracket  shift, and go to state 135

    $default  reduce using rule 69 (Expr)


state 152

   67 Expr: Expr . t_plus Expr
   68     | Expr . t_minus Expr
   69     | Expr . t_multiplication Expr
   70     | Expr . t_division Expr
   70     | Expr t_division Expr .
   71     | Expr . t_mod Expr
   72     | Expr . t_or Expr
   73     | Expr . t_and Expr
   74     | Expr . t_not Expr
   76     | Expr . t_less Expr
   77     | Expr . t_lessequal Expr
   78     | Expr . t_greater Expr
   79     | Expr . t_greaterequal Expr
   80     | Expr . t_equal Expr
   81     | Expr . t_notequal Expr
   85 Lvalue: Expr . t_leftbracket Expr t_rightbracket
   86       | Expr . t_period t_id

    t_not          shift, and go to state 133
    t_period       shift, and go to state 134
    t_leftbracket  shift, and go to state 135

    $default  reduce using rule 70 (Expr)


state 153

   67 Expr: Expr . t_plus Expr
   68     | Expr . t_minus Expr
   69     | Expr . t_multiplication Expr
   70     | Expr . t_division Expr
   71     | Expr . t_mod Expr
   71     | Expr t_mod Expr .
   72     | Expr . t_or Expr
   73     | Expr . t_and Expr
   74     | Expr . t_not Expr
   76     | Expr . t_less Expr
   77     | Expr . t_lessequal Expr
   78     | Expr . t_greater Expr
   79     | Expr . t_greaterequal Expr
   80     | Expr . t_equal Expr
   81     | Expr . t_notequal Expr
   85 Lvalue: Expr . t_leftbracket Expr t_rightbracket
   86       | Expr . t_period t_id

    t_not          shift, and go to state 133
    t_period       shift, and go to state 134
    t_leftbracket  shift, and go to state 135

    $default  reduce using rule 71 (Expr)


state 154

   67 Expr: Expr . t_plus Expr
   68     | Expr . t_minus Expr
   69     | Expr . t_multiplication Expr
   70     | Expr . t_division Expr
   71     | Expr . t_mod Expr
   72     | Expr . t_or Expr
   73     | Expr . t_and Expr
   74     | Expr . t_not Expr
   76     | Expr . t_less Expr
   76     | Expr t_less Expr .
   77     | Expr . t_lessequal Expr
   78     | Expr . t_greater Expr
   79     | Expr . t_greaterequal Expr
   80     | Expr . t_equal Expr
   81     | Expr . t_notequal Expr
   85 Lvalue: Expr . t_leftbracket Expr t_rightbracket
   86       | Expr . t_period t_id

    t_plus            shift, and go to state 120
    t_minus           shift, and go to state 121
    t_multiplication  shift, and go to state 122
    t_division        shift, and go to state 123
    t_mod             shift, and go to state 124
    t_not             shift, and go to state 133
    t_period          shift, and go to state 134
    t_leftbracket     shift, and go to state 135

    t_less          error (nonassociative)
    t_lessequal     error (nonassociative)
    t_greater       error (nonassociative)
    t_greaterequal  error (nonassociative)

    $default  reduce using rule 76 (Expr)


state 155

   67 Expr: Expr . t_plus Expr
   68     | Expr . t_minus Expr
   69     | Expr . t_multiplication Expr
   70     | Expr . t_division Expr
   71     | Expr . t_mod Expr
   72     | Expr . t_or Expr
   73     | Expr . t_and Expr
   74     | Expr . t_not Expr
   76     | Expr . t_less Expr
   77     | Expr . t_lessequal Expr
   77     | Expr t_lessequal Expr .
   78     | Expr . t_greater Expr
   79     | Expr . t_greaterequal Expr
   80     | Expr . t_equal Expr
   81     | Expr . t_notequal Expr
   85 Lvalue: Expr . t_leftbracket Expr t_rightbracket
   86       | Expr . t_period t_id

    t_plus            shift, and go to state 120
    t_minus           shift, and go to state 121
    t_multiplication  shift, and go to state 122
    t_division        shift, and go to state 123
    t_mod             shift, and go to state 124
    t_not             shift, and go to state 133
    t_period          shift, and go to state 134
    t_leftbracket     shift, and go to state 135

    t_less          error (nonassociative)
    t_lessequal     error (nonassociative)
    t_greater       error (nonassociative)
    t_greaterequal  error (nonassociative)

    $default  reduce using rule 77 (Expr)


state 156

   67 Expr: Expr . t_plus Expr
   68     | Expr . t_minus Expr
   69     | Expr . t_multiplication Expr
   70     | Expr . t_division Expr
   71     | Expr . t_mod Expr
   72     | Expr . t_or Expr
   73     | Expr . t_and Expr
   74     | Expr . t_not Expr
   76     | Expr . t_less Expr
   77     | Expr . t_lessequal Expr
   78     | Expr . t_greater Expr
   78     | Expr t_greater Expr .
   79     | Expr . t_greaterequal Expr
   80     | Expr . t_equal Expr
   81     | Expr . t_notequal Expr
   85 Lvalue: Expr . t_leftbracket Expr t_rightbracket
   86       | Expr . t_period t_id

    t_plus            shift, and go to state 120
    t_minus           shift, and go to state 121
    t_multiplication  shift, and go to state 122
    t_division        shift, and go to state 123
    t_mod             shift, and go to state 124
    t_not             shift, and go to state 133
    t_period          shift, and go to state 134
    t_leftbracket     shift, and go to state 135

    t_less          error (nonassociative)
    t_lessequal     error (nonassociative)
    t_greater       error (nonassociative)
    t_greaterequal  error (nonassociative)

    $default  reduce using rule 78 (Expr)


state 157

   67 Expr: Expr . t_plus Expr
   68     | Expr . t_minus Expr
   69     | Expr . t_multiplication Expr
   70     | Expr . t_division Expr
   71     | Expr . t_mod Expr
   72     | Expr . t_or Expr
   73     | Expr . t_and Expr
   74     | Expr . t_not Expr
   76     | Expr . t_less Expr
   77     | Expr . t_lessequal Expr
   78     | Expr . t_greater Expr
   79     | Expr . t_greaterequal Expr
   79     | Expr t_greaterequal Expr .
   80     | Expr . t_equal Expr
   81     | Expr . t_notequal Expr
   85 Lvalue: Expr . t_leftbracket Expr t_rightbracket
   86       | Expr . t_period t_id

    t_plus            shift, and go to state 120
    t_minus           shift, and go to state 121
    t_multiplication  shift, and go to state 122
    t_division        shift, and go to state 123
    t_mod             shift, and go to state 124
    t_not             shift, and go to state 133
    t_period          shift, and go to state 134
    t_leftbracket     shift, and go to state 135

    t_less          error (nonassociative)
    t_lessequal     error (nonassociative)
    t_greater       error (nonassociative)
    t_greaterequal  error (nonassociative)

    $default  reduce using rule 79 (Expr)


state 158

   67 Expr: Expr . t_plus Expr
   68     | Expr . t_minus Expr
   69     | Expr . t_multiplication Expr
   70     | Expr . t_division Expr
   71     | Expr . t_mod Expr
   72     | Expr . t_or Expr
   73     | Expr . t_and Expr
   74     | Expr . t_not Expr
   76     | Expr . t_less Expr
   77     | Expr . t_lessequal Expr
   78     | Expr . t_greater Expr
   79     | Expr . t_greaterequal Expr
   80     | Expr . t_equal Expr
   80     | Expr t_equal Expr .
   81     | Expr . t_notequal Expr
   85 Lvalue: Expr . t_leftbracket Expr t_rightbracket
   86       | Expr . t_period t_id

    t_plus            shift, and go to state 120
    t_minus           shift, and go to state 121
    t_multiplication  shift, and go to state 122
    t_division        shift, and go to state 123
    t_mod             shift, and go to state 124
    t_less            shift, and go to state 125
    t_lessequal       shift, and go to state 126
    t_greater         shift, and go to state 127
    t_greaterequal    shift, and go to state 128
    t_equal           shift, and go to state 129
    t_notequal        shift, and go to state 130
    t_not             shift, and go to state 133
    t_period          shift, and go to state 134
    t_leftbracket     shift, and go to state 135

    $default  reduce using rule 80 (Expr)


state 159

   67 Expr: Expr . t_plus Expr
   68     | Expr . t_minus Expr
   69     | Expr . t_multiplication Expr
   70     | Expr . t_division Expr
   71     | Expr . t_mod Expr
   72     | Expr . t_or Expr
   73     | Expr . t_and Expr
   74     | Expr . t_not Expr
   76     | Expr . t_less Expr
   77     | Expr . t_lessequal Expr
   78     | Expr . t_greater Expr
   79     | Expr . t_greaterequal Expr
   80     | Expr . t_equal Expr
   81     | Expr . t_notequal Expr
   81     | Expr t_notequal Expr .
   85 Lvalue: Expr . t_leftbracket Expr t_rightbracket
   86       | Expr . t_period t_id

    t_plus            shift, and go to state 120
    t_minus           shift, and go to state 121
    t_multiplication  shift, and go to state 122
    t_division        shift, and go to state 123
    t_mod             shift, and go to state 124
    t_less            shift, and go to state 125
    t_lessequal       shift, and go to state 126
    t_greater         shift, and go to state 127
    t_greaterequal    shift, and go to state 128
    t_equal           shift, and go to state 129
    t_notequal        shift, and go to state 130
    t_not             shift, and go to state 133
    t_period          shift, and go to state 134
    t_leftbracket     shift, and go to state 135

    $default  reduce using rule 81 (Expr)


state 160

   67 Expr: Expr . t_plus Expr
   68     | Expr . t_minus Expr
   69     | Expr . t_multiplication Expr
   70     | Expr . t_division Expr
   71     | Expr . t_mod Expr
   72     | Expr . t_or Expr
   73     | Expr . t_and Expr
   73     | Expr t_and Expr .
   74     | Expr . t_not Expr
   76     | Expr . t_less Expr
   77     | Expr . t_lessequal Expr
   78     | Expr . t_greater Expr
   79     | Expr . t_greaterequal Expr
   80     | Expr . t_equal Expr
   81     | Expr . t_notequal Expr
   85 Lvalue: Expr . t_leftbracket Expr t_rightbracket
   86       | Expr . t_period t_id

    t_plus            shift, and go to state 120
    t_minus           shift, and go to state 121
    t_multiplication  shift, and go to state 122
    t_division        shift, and go to state 123
    t_mod             shift, and go to state 124
    t_less            shift, and go to state 125
    t_lessequal       shift, and go to state 126
    t_greater         shift, and go to state 127
    t_greaterequal    shift, and go to state 128
    t_equal           shift, and go to state 129
    t_notequal        shift, and go to state 130
    t_not             shift, and go to state 133
    t_period          shift, and go to state 134
    t_leftbracket     shift, and go to state 135

    $default  reduce using rule 73 (Expr)


state 161

   67 Expr: Expr . t_plus Expr
   68     | Expr . t_minus Expr
   69     | Expr . t_multiplication Expr
   70     | Expr . t_division Expr
   71     | Expr . t_mod Expr
   72     | Expr . t_or Expr
   72     | Expr t_or Expr .
   73     | Expr . t_and Expr
   74     | Expr . t_not Expr
   76     | Expr . t_less Expr
   77     | Expr . t_lessequal Expr
   78     | Expr . t_greater Expr
   79     | Expr . t_greaterequal Expr
   80     | Expr . t_equal Expr
   81     | Expr . t_notequal Expr
   85 Lvalue: Expr . t_leftbracket Expr t_rightbracket
   86       | Expr . t_period t_id

    t_plus            shift, and go to state 120
    t_minus           shift, and go to state 121
    t_multiplication  shift, and go to state 122
    t_division        shift, and go to state 123
    t_mod             shift, and go to state 124
    t_less            shift, and go to state 125
    t_lessequal       shift, and go to state 126
    t_greater         shift, and go to state 127
    t_greaterequal    shift, and go to state 128
    t_equal           shift, and go to state 129
    t_notequal        shift, and go to state 130
    t_and             shift, and go to state 131
    t_not             shift, and go to state 133
    t_period          shift, and go to state 134
    t_leftbracket     shift, and go to state 135

    $default  reduce using rule 72 (Expr)


state 162

   67 Expr: Expr . t_plus Expr
   68     | Expr . t_minus Expr
   69     | Expr . t_multiplication Expr
   70     | Expr . t_division Expr
   71     | Expr . t_mod Expr
   72     | Expr . t_or Expr
   73     | Expr . t_and Expr
   74     | Expr . t_not Expr
   74     | Expr t_not Expr .
   76     | Expr . t_less Expr
   77     | Expr . t_lessequal Expr
   78     | Expr . t_greater Expr
   79     | Expr . t_greaterequal Expr
   80     | Expr . t_equal Expr
   81     | Expr . t_notequal Expr
   85 Lvalue: Expr . t_leftbracket Expr t_rightbracket
   86       | Expr . t_period t_id

    t_period       shift, and go to state 134
    t_leftbracket  shift, and go to state 135

    $default  reduce using rule 74 (Expr)


state 163

   86 Lvalue: Expr t_period t_id .

    $default  reduce using rule 86 (Lvalue)


state 164

   67 Expr: Expr . t_plus Expr
   68     | Expr . t_minus Expr
   69     | Expr . t_multiplication Expr
   70     | Expr . t_division Expr
   71     | Expr . t_mod Expr
   72     | Expr . t_or Expr
   73     | Expr . t_and Expr
   74     | Expr . t_not Expr
   76     | Expr . t_less Expr
   77     | Expr . t_lessequal Expr
   78     | Expr . t_greater Expr
   79     | Expr . t_greaterequal Expr
   80     | Expr . t_equal Expr
   81     | Expr . t_notequal Expr
   85 Lvalue: Expr . t_leftbracket Expr t_rightbracket
   85       | Expr t_leftbracket Expr . t_rightbracket
   86       | Expr . t_period t_id

    t_plus            shift, and go to state 120
    t_minus           shift, and go to state 121
    t_multiplication  shift, and go to state 122
    t_division        shift, and go to state 123
    t_mod             shift, and go to state 124
    t_less            shift, and go to state 125
    t_lessequal       shift, and go to state 126
    t_greater         shift, and go to state 127
    t_greaterequal    shift, and go to state 128
    t_equal           shift, and go to state 129
    t_notequal        shift, and go to state 130
    t_and             shift, and go to state 131
    t_or              shift, and go to state 132
    t_not             shift, and go to state 133
    t_period          shift, and go to state 134
    t_leftbracket     shift, and go to state 135
    t_rightbracket    shift, and go to state 175


state 165

   62 Expr: Lvalue t_assignop Expr .
   67     | Expr . t_plus Expr
   68     | Expr . t_minus Expr
   69     | Expr . t_multiplication Expr
   70     | Expr . t_division Expr
   71     | Expr . t_mod Expr
   72     | Expr . t_or Expr
   73     | Expr . t_and Expr
   74     | Expr . t_not Expr
   76     | Expr . t_less Expr
   77     | Expr . t_lessequal Expr
   78     | Expr . t_greater Expr
   79     | Expr . t_greaterequal Expr
   80     | Expr . t_equal Expr
   81     | Expr . t_notequal Expr
   85 Lvalue: Expr . t_leftbracket Expr t_rightbracket
   86       | Expr . t_period t_id

    t_plus            shift, and go to state 120
    t_minus           shift, and go to state 121
    t_multiplication  shift, and go to state 122
    t_division        shift, and go to state 123
    t_mod             shift, and go to state 124
    t_less            shift, and go to state 125
    t_lessequal       shift, and go to state 126
    t_greater         shift, and go to state 127
    t_greaterequal    shift, and go to state 128
    t_equal           shift, and go to state 129
    t_notequal        shift, and go to state 130
    t_and             shift, and go to state 131
    t_or              shift, and go to state 132
    t_not             shift, and go to state 133
    t_period          shift, and go to state 134
    t_leftbracket     shift, and go to state 135

    $default  reduce using rule 62 (Expr)


state 166

   54 ForStmt: t_for t_leftparen ExprOrEmpty t_semicolon . Expr t_semicolon ExprOrEmpty t_rightparen Stmt

    t_newarray        shift, and go to state 76
    t_readln          shift, and go to state 78
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    Expr      go to state 176
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


state 167

   51 IfStmt: t_if t_leftparen Expr t_rightparen . Stmt
   52       | t_if t_leftparen Expr t_rightparen . Stmt t_else Stmt

    t_break           shift, and go to state 73
    t_for             shift, and go to state 74
    t_if              shift, and go to state 75
    t_newarray        shift, and go to state 76
    t_println         shift, and go to state 77
    t_readln          shift, and go to state 78
    t_return          shift, and go to state 79
    t_while           shift, and go to state 80
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_leftbrace       shift, and go to state 62
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    $default  reduce using rule 61 (ExprOrEmpty)

    StmtBlock    go to state 88
    Stmt         go to state 177
    IfStmt       go to state 91
    WhileStmt    go to state 92
    ForStmt      go to state 93
    BreakStmt    go to state 94
    ReturnStmt   go to state 95
    PrintStmt    go to state 96
    ExprOrEmpty  go to state 97
    Expr         go to state 98
    Lvalue       go to state 99
    Call         go to state 100
    Constant     go to state 101


state 168

   83 Expr: t_newarray t_leftparen t_intconstant t_comma . Type t_rightparen

    t_bool    shift, and go to state 1
    t_double  shift, and go to state 3
    t_int     shift, and go to state 4
    t_string  shift, and go to state 6
    t_id      shift, and go to state 8

    Type  go to state 178


state 169

   58 ExprList: ExprList t_comma . Expr

    t_newarray        shift, and go to state 76
    t_readln          shift, and go to state 78
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    Expr      go to state 179
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


state 170

   57 PrintStmt: t_println t_leftparen ExprList t_rightparen . t_semicolon

    t_semicolon  shift, and go to state 180


state 171

   53 WhileStmt: t_while t_leftparen Expr t_rightparen . Stmt

    t_break           shift, and go to state 73
    t_for             shift, and go to state 74
    t_if              shift, and go to state 75
    t_newarray        shift, and go to state 76
    t_println         shift, and go to state 77
    t_readln          shift, and go to state 78
    t_return          shift, and go to state 79
    t_while           shift, and go to state 80
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_leftbrace       shift, and go to state 62
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    $default  reduce using rule 61 (ExprOrEmpty)

    StmtBlock    go to state 88
    Stmt         go to state 181
    IfStmt       go to state 91
    WhileStmt    go to state 92
    ForStmt      go to state 93
    BreakStmt    go to state 94
    ReturnStmt   go to state 95
    PrintStmt    go to state 96
    ExprOrEmpty  go to state 97
    Expr         go to state 98
    Lvalue       go to state 99
    Call         go to state 100
    Constant     go to state 101


state 172

   88 Call: t_id t_period t_id t_leftparen . Actuals t_rightparen

    t_newarray        shift, and go to state 76
    t_readln          shift, and go to state 78
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    $default  reduce using rule 91 (Actuals)

    Expr      go to state 147
    Lvalue    go to state 99
    Call      go to state 100
    Actuals   go to state 182
    Constant  go to state 101


state 173

   90 Actuals: Expr t_comma . Actuals

    t_newarray        shift, and go to state 76
    t_readln          shift, and go to state 78
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    $default  reduce using rule 91 (Actuals)

    Expr      go to state 147
    Lvalue    go to state 99
    Call      go to state 100
    Actuals   go to state 183
    Constant  go to state 101


state 174

   87 Call: t_id t_leftparen Actuals t_rightparen .

    $default  reduce using rule 87 (Call)


state 175

   85 Lvalue: Expr t_leftbracket Expr t_rightbracket .

    $default  reduce using rule 85 (Lvalue)


state 176

   54 ForStmt: t_for t_leftparen ExprOrEmpty t_semicolon Expr . t_semicolon ExprOrEmpty t_rightparen Stmt
   67 Expr: Expr . t_plus Expr
   68     | Expr . t_minus Expr
   69     | Expr . t_multiplication Expr
   70     | Expr . t_division Expr
   71     | Expr . t_mod Expr
   72     | Expr . t_or Expr
   73     | Expr . t_and Expr
   74     | Expr . t_not Expr
   76     | Expr . t_less Expr
   77     | Expr . t_lessequal Expr
   78     | Expr . t_greater Expr
   79     | Expr . t_greaterequal Expr
   80     | Expr . t_equal Expr
   81     | Expr . t_notequal Expr
   85 Lvalue: Expr . t_leftbracket Expr t_rightbracket
   86       | Expr . t_period t_id

    t_plus            shift, and go to state 120
    t_minus           shift, and go to state 121
    t_multiplication  shift, and go to state 122
    t_division        shift, and go to state 123
    t_mod             shift, and go to state 124
    t_less            shift, and go to state 125
    t_lessequal       shift, and go to state 126
    t_greater         shift, and go to state 127
    t_greaterequal    shift, and go to state 128
    t_equal           shift, and go to state 129
    t_notequal        shift, and go to state 130
    t_and             shift, and go to state 131
    t_or              shift, and go to state 132
    t_not             shift, and go to state 133
    t_semicolon       shift, and go to state 184
    t_period          shift, and go to state 134
    t_leftbracket     shift, and go to state 135


state 177

   51 IfStmt: t_if t_leftparen Expr t_rightparen Stmt .
   52       | t_if t_leftparen Expr t_rightparen Stmt . t_else Stmt

    t_else  shift, and go to state 185

    t_else    [reduce using rule 51 (IfStmt)]
    $default  reduce using rule 51 (IfStmt)


state 178

   16 Type: Type . t_leftbracket t_rightbracket
   83 Expr: t_newarray t_leftparen t_intconstant t_comma Type . t_rightparen

    t_rightparen   shift, and go to state 186
    t_leftbracket  shift, and go to state 24


state 179

   58 ExprList: ExprList t_comma Expr .
   67 Expr: Expr . t_plus Expr
   68     | Expr . t_minus Expr
   69     | Expr . t_multiplication Expr
   70     | Expr . t_division Expr
   71     | Expr . t_mod Expr
   72     | Expr . t_or Expr
   73     | Expr . t_and Expr
   74     | Expr . t_not Expr
   76     | Expr . t_less Expr
   77     | Expr . t_lessequal Expr
   78     | Expr . t_greater Expr
   79     | Expr . t_greaterequal Expr
   80     | Expr . t_equal Expr
   81     | Expr . t_notequal Expr
   85 Lvalue: Expr . t_leftbracket Expr t_rightbracket
   86       | Expr . t_period t_id

    t_plus            shift, and go to state 120
    t_minus           shift, and go to state 121
    t_multiplication  shift, and go to state 122
    t_division        shift, and go to state 123
    t_mod             shift, and go to state 124
    t_less            shift, and go to state 125
    t_lessequal       shift, and go to state 126
    t_greater         shift, and go to state 127
    t_greaterequal    shift, and go to state 128
    t_equal           shift, and go to state 129
    t_notequal        shift, and go to state 130
    t_and             shift, and go to state 131
    t_or              shift, and go to state 132
    t_not             shift, and go to state 133
    t_period          shift, and go to state 134
    t_leftbracket     shift, and go to state 135

    $default  reduce using rule 58 (ExprList)


state 180

   57 PrintStmt: t_println t_leftparen ExprList t_rightparen t_semicolon .

    $default  reduce using rule 57 (PrintStmt)


state 181

   53 WhileStmt: t_while t_leftparen Expr t_rightparen Stmt .

    $default  reduce using rule 53 (WhileStmt)


state 182

   88 Call: t_id t_period t_id t_leftparen Actuals . t_rightparen

    t_rightparen  shift, and go to state 187


state 183

   90 Actuals: Expr t_comma Actuals .

    $default  reduce using rule 90 (Actuals)


state 184

   54 ForStmt: t_for t_leftparen ExprOrEmpty t_semicolon Expr t_semicolon . ExprOrEmpty t_rightparen Stmt

    t_newarray        shift, and go to state 76
    t_readln          shift, and go to state 78
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    $default  reduce using rule 61 (ExprOrEmpty)

    ExprOrEmpty  go to state 188
    Expr         go to state 98
    Lvalue       go to state 99
    Call         go to state 100
    Constant     go to state 101


state 185

   52 IfStmt: t_if t_leftparen Expr t_rightparen Stmt t_else . Stmt

    t_break           shift, and go to state 73
    t_for             shift, and go to state 74
    t_if              shift, and go to state 75
    t_newarray        shift, and go to state 76
    t_println         shift, and go to state 77
    t_readln          shift, and go to state 78
    t_return          shift, and go to state 79
    t_while           shift, and go to state 80
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_leftbrace       shift, and go to state 62
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    $default  reduce using rule 61 (ExprOrEmpty)

    StmtBlock    go to state 88
    Stmt         go to state 189
    IfStmt       go to state 91
    WhileStmt    go to state 92
    ForStmt      go to state 93
    BreakStmt    go to state 94
    ReturnStmt   go to state 95
    PrintStmt    go to state 96
    ExprOrEmpty  go to state 97
    Expr         go to state 98
    Lvalue       go to state 99
    Call         go to state 100
    Constant     go to state 101


state 186

   83 Expr: t_newarray t_leftparen t_intconstant t_comma Type t_rightparen .

    $default  reduce using rule 83 (Expr)


state 187

   88 Call: t_id t_period t_id t_leftparen Actuals t_rightparen .

    $default  reduce using rule 88 (Call)


state 188

   54 ForStmt: t_for t_leftparen ExprOrEmpty t_semicolon Expr t_semicolon ExprOrEmpty . t_rightparen Stmt

    t_rightparen  shift, and go to state 190


state 189

   52 IfStmt: t_if t_leftparen Expr t_rightparen Stmt t_else Stmt .

    $default  reduce using rule 52 (IfStmt)


state 190

   54 ForStmt: t_for t_leftparen ExprOrEmpty t_semicolon Expr t_semicolon ExprOrEmpty t_rightparen . Stmt

    t_break           shift, and go to state 73
    t_for             shift, and go to state 74
    t_if              shift, and go to state 75
    t_newarray        shift, and go to state 76
    t_println         shift, and go to state 77
    t_readln          shift, and go to state 78
    t_return          shift, and go to state 79
    t_while           shift, and go to state 80
    t_minus           shift, and go to state 81
    t_leftparen       shift, and go to state 82
    t_leftbrace       shift, and go to state 62
    t_boolconstant    shift, and go to state 83
    t_intconstant     shift, and go to state 84
    t_doubleconstant  shift, and go to state 85
    t_stringconstant  shift, and go to state 86
    t_id              shift, and go to state 87

    $default  reduce using rule 61 (ExprOrEmpty)

    StmtBlock    go to state 88
    Stmt         go to state 191
    IfStmt       go to state 91
    WhileStmt    go to state 92
    ForStmt      go to state 93
    BreakStmt    go to state 94
    ReturnStmt   go to state 95
    PrintStmt    go to state 96
    ExprOrEmpty  go to state 97
    Expr         go to state 98
    Lvalue       go to state 99
    Call         go to state 100
    Constant     go to state 101


state 191

   54 ForStmt: t_for t_leftparen ExprOrEmpty t_semicolon Expr t_semicolon ExprOrEmpty t_rightparen Stmt .

    $default  reduce using rule 54 (ForStmt)
